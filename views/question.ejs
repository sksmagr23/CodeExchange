<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/fav.svg" />
    <title><%= question.title %> - CodeExchange</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      (function () {
        const savedTheme = localStorage.getItem("theme");
        const prefersDark = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches;

        if (savedTheme === "dark" || (savedTheme !== "light" && prefersDark)) {
          document.documentElement.classList.add("dark");
        } else {
          document.documentElement.classList.remove("dark");
        }
      })();
    </script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Fira+Code:wght@400;500;600&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/styles.css" />
    <link rel="stylesheet" href="/theme.css" />
    <script>
      tailwind.config = {
        darkMode: "class",
        theme: {
          extend: {
            fontFamily: {
              sans: ["Poppins", "sans-serif"],
              mono: ["Fira Code", "monospace"],
            },
          },
        },
      };
    </script>
  </head>
  <body
    class="bg-gradient-to-br from-[#f8fafc] to-[#e0f2fe] text-gray-800 font-sans min-h-screen flex flex-col"
  >
    <header class="bg-[#0466C8] text-white shadow-lg sticky top-0 z-50">
      <div class="container mx-auto px-0 py-3">
        <div class="flex justify-between items-center mx-2 md:mx-0">
          <div class="flex items-center">
            <i class="fas fa-code text-xl mr-2"></i>
            <h1 class="text-2xl font-bold font-mono">CodeExchange</h1>
          </div>
          <nav class="hidden items-center md:flex space-x-4">
            <a href="/" class="nav-link">
              <i class="fas fa-home mr-1"></i> Home
            </a>
            <a href="/questions" class="nav-link active">
              <i class="fas fa-question-circle mr-1"></i> Questions
            </a>
            <a href="/stackoverflow/search" class="nav-link">
              <i class="fab fa-stack-overflow mr-1"></i> Stack
            </a>
            <% if (user) { %>
            <a href="/questions/ask" class="nav-link">
              <i class="fas fa-pen mr-1"></i> Ask
            </a>
            <a href="/api/auth/logout" class="nav-link">
              <i class="fas fa-sign-out-alt mr-1"></i> Logout
            </a>
            <a href="/profile" class="nav-link">
              <img
                src="<%= user.profilePicture || '/avatar.png' %>"
                alt="Profile"
                class="w-9 h-9 rounded-full object-cover"
            /></a>
            <label class="switch" id="themeToggle">
              <input type="checkbox" />
              <span class="slider"></span>
            </label>
            <% } else { %>
            <a href="/login" class="nav-link">
              <i class="fas fa-sign-in-alt mr-1"></i> Login
            </a>
            <a href="/register" class="nav-link">
              <i class="fas fa-user-plus mr-1"></i>
              Register
            </a>
            <label class="switch" id="themeToggle">
              <input type="checkbox" />
              <span class="slider"></span>
            </label>
            <% } %>
          </nav>
          <button
            id="mobileMenuButton"
            class="md:hidden text-white text-xl p-2 focus:outline-none"
          >
            <i id="hamburgerIcon" class="fas fa-bars"></i>
          </button>
        </div>
      </div>

      <div id="mobileMenu" class="md:hidden bg-[#0353A4] hidden">
        <div class="container mx-auto px-4 py-2">
          <nav class="flex flex-col space-y-2 pb-3">
            <a href="/" class="mobile-nav-link">
              <i class="fas fa-home mr-2"></i> Home
            </a>
            <a href="/questions" class="mobile-nav-link active">
              <i class="fas fa-question-circle mr-2"></i> Questions
            </a>
            <a href="/stackoverflow/search" class="mobile-nav-link">
              <i class="fab fa-stack-overflow mr-2"></i> Stack
            </a>
            <% if (user) { %>
            <a href="/questions/ask" class="mobile-nav-link">
              <i class="fas fa-pen mr-2"></i> Ask
            </a>
            <a href="/profile" class="mobile-nav-link">
              <i class="fas fa-user mr-2"></i> Profile
            </a>
            <a href="/api/auth/logout" class="mobile-nav-link">
              <i class="fas fa-sign-out-alt mr-2"></i> Logout
            </a>
            <label class="switch" id="mobileThemeToggle">
              <input type="checkbox" />
              <span class="slider"></span>
            </label>
            <% } else { %>
            <a href="/login" class="mobile-nav-link">
              <i class="fas fa-sign-in-alt mr-2"></i> Login
            </a>
            <a href="/register" class="mobile-nav-link">
              <i class="fas fa-user-plus mr-2"></i> Register
            </a>
            <label class="switch" id="mobileThemeToggle">
              <input type="checkbox" />
              <span class="slider"></span>
            </label>
            <% } %>
          </nav>
        </div>
      </div>
    </header>

    <main class="flex-grow container mx-auto px-4 py-8">
      <div class="max-w-4xl mx-auto">
        <div class="bg-white rounded-xl shadow-md overflow-hidden mb-6">
          <div class="bg-gradient-to-r from-[#0466C8] to-[#0353A4] p-4">
            <div class="flex justify-between items-center">
              <h1 class="text-2xl font-bold text-white">
                <%= question.title %>
              </h1>
              <a
                href="/questions"
                class="bg-white bg-opacity-20 hover:bg-opacity-30 text-white px-3 py-1.5 rounded-md transition flex items-center text-sm"
              >
                <i class="fas fa-arrow-left mr-1"></i> Back
              </a>
            </div>
          </div>

          <div class="p-6">
            <% if (question.tags && question.tags.length > 0) { %>
            <div class="mb-4">
              <div class="flex flex-wrap gap-2">
                <span class="text-gray-600 font-medium mb-2 block md:inline md:mb-0">Tags:</span>
                <div class="flex flex-wrap gap-2">
                  <% question.tags.forEach(tag => { %>
                  <a
                    href="/questions?tag=<%= tag %>"
                    class="px-2 py-1 text-xs sm:text-sm bg-blue-100 text-[#0466C8] rounded-full hover:bg-blue-200 transition-colors"
                  >
                    <%= tag %>
                  </a>
                  <% }) %>
                </div>
              </div>
            </div>
            <% } %>

            <div id="questionContent" class="bg-gray-50 p-3 sm:p-4 rounded-lg mb-4">
              <div class="text-gray-800 markdown-content overflow-x-auto">
                <%- markdownDescription %>
              </div>
            </div>

            <div id="questionEditForm" class="bg-gray-50 p-3 sm:p-4 rounded-lg mb-4 hidden">
              <form id="editQuestionForm">
                <textarea
                  id="editQuestionText"
                  class="block w-full px-3 py-2 sm:px-4 sm:py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#0466C8] focus:border-[#0466C8] shadow-sm outline-none text-sm sm:text-base"
                  rows="8"
                ><%= question.description %></textarea>
                <div class="mt-3 flex flex-wrap gap-2 sm:flex-nowrap sm:space-x-3">
                  <button
                    type="submit"
                    class="flex-1 sm:flex-none px-3 py-1.5 sm:px-4 sm:py-2 bg-[#0466C8] text-white rounded-lg hover:bg-[#0353A4] transition text-xs sm:text-sm"
                  >
                    <i class="fas fa-save mr-1"></i> Save
                  </button>
                  <button
                    type="button"
                    onclick="toggleQuestionEdit(false)"
                    class="flex-1 sm:flex-none px-3 py-1.5 sm:px-4 sm:py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition text-xs sm:text-sm"
                  >
                    <i class="fas fa-times mr-1"></i> Cancel
                  </button>
                </div>
              </form>
            </div>
            <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-3">
              <div class="flex items-center text-xs sm:text-sm text-gray-500">
                <div class="flex items-center">
                  <i class="fas fa-user-circle mr-1"></i>
                  <span class="font-medium"><%= question.user.username %></span>
                </div>
                <div class="mx-2">â€¢</div>
                <div class="flex items-center">
                  <i class="far fa-clock mr-1"></i>
                  <span><%= new Date(question.createdAt).toLocaleString() %></span>
                </div>
              </div>
              
              <% if (user && question.user._id.toString() === user._id.toString()) { %>
              <div class="flex space-x-2 w-full sm:w-auto">
                <button
                  onclick="toggleQuestionEdit(true)"
                  class="flex items-center justify-center px-3 py-1.5 bg-blue-100 text-[#0466C8] rounded-md hover:bg-blue-200 transition text-xs sm:text-sm w-full sm:w-auto"
                  id="editQuestionBtn"
                >
                  <i class="fas fa-edit mr-1"></i> Edit
                </button>
              </div>
              <% } %>
            </div>
          </div>
        </div>

        <div class="bg-white rounded-xl shadow-md overflow-hidden mb-6">
          <div class="bg-gray-50 border-b p-4">
            <h2 class="text-xl font-semibold text-[#023E7D] flex items-center">
              <i class="fas fa-comments mr-2"></i>
              Answers (<%= answers.length %>)
            </h2>
          </div>

          <div class="divide-y divide-gray-100">
            <% if (answers.length === 0) { %>
            <div class="p-4 sm:p-8 text-center">
              <div class="text-gray-400 mb-3">
                <i class="fas fa-comments text-3xl sm:text-4xl"></i>
              </div>
              <p class="text-gray-600 text-sm sm:text-base">
                No answers yet. Be the first to answer this question!
              </p>
            </div>
            <% } else { %> <% answers.forEach(answer => { %>
            <div class="p-3 sm:p-5 hover:bg-gray-50" id="answer-<%= answer._id %>">
              <div class="answer-content bg-gray-50 p-3 sm:p-4 rounded-lg mb-3">
                <p class="text-sm sm:text-base overflow-x-auto"><%= answer.text %></p>
              </div>

              <div class="answer-edit-form bg-gray-50 p-3 sm:p-4 rounded-lg mb-3 hidden">
                <form class="edit-answer-form" data-answer-id="<%= answer._id %>">
                  <textarea
                    class="edit-answer-text block w-full px-3 py-2 sm:px-4 sm:py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#0466C8] focus:border-[#0466C8] shadow-sm outline-none text-sm sm:text-base"
                    rows="5"
                  ><%= answer.text %></textarea>
                  <div class="mt-3 flex flex-wrap gap-2 sm:flex-nowrap sm:space-x-3">
                    <button
                      type="submit"
                      class="flex-1 sm:flex-none px-3 py-1.5 sm:px-4 sm:py-2 bg-[#0466C8] text-white rounded-lg hover:bg-[#0353A4] transition text-xs sm:text-sm"
                    >
                      <i class="fas fa-save mr-1"></i> Save
                    </button>
                    <button
                      type="button"
                      onclick="toggleAnswerEdit('<%= answer._id %>', false)"
                      class="flex-1 sm:flex-none px-3 py-1.5 sm:px-4 sm:py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition text-xs sm:text-sm"
                    >
                      <i class="fas fa-times mr-1"></i> Cancel
                    </button>
                  </div>
                </form>
              </div>

              <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-3">
                <div class="flex items-center text-xs sm:text-sm text-gray-500">
                  <div class="flex items-center">
                    <i class="fas fa-user-circle mr-1"></i>
                    <span class="font-medium"><%= answer.user.username %></span>
                  </div>
                  <div class="mx-2">â€¢</div>
                  <div class="flex items-center">
                    <i class="far fa-clock mr-1"></i>
                    <span><%= new Date(answer.createdAt).toLocaleString() %></span>
                  </div>
                </div>
                <% if (user && answer.user._id.toString() === user._id.toString()) { %>
                <div class="flex flex-wrap gap-2 w-full sm:w-auto sm:space-x-2">
                  <button
                    onclick="toggleAnswerEdit('<%= answer._id %>', true)"
                    class="flex-1 sm:flex-none flex items-center justify-center px-3 py-1.5 bg-blue-100 text-[#0466C8] rounded-md hover:bg-blue-200 transition text-xs sm:text-sm"
                  >
                    <i class="fas fa-edit mr-1"></i> Edit
                  </button>
                  <button
                    onclick="deleteAnswer('<%= question._id %>', '<%= answer._id %>')"
                    class="flex-1 sm:flex-none flex items-center justify-center px-3 py-1.5 bg-red-100 text-red-600 rounded-md hover:bg-red-200 transition text-xs sm:text-sm"
                  >
                    <i class="fas fa-trash-alt mr-1"></i> Delete
                  </button>
                </div>
                <% } %>
              </div>
            </div>
            <% }) %> <% } %>
          </div>
        </div>

        <div class="bg-white rounded-xl shadow-md overflow-hidden">
          <div class="border-b p-4 bg-[#023E7D] text-white">
            <h3 class="text-xl font-semibold flex items-center">
              <i class="fas fa-reply mr-2"></i>
              Your Answer
            </h3>
          </div>

          <div class="p-4 sm:p-6 bg-[#0279f0]">
            <% if (user) { %>
            <form
              action="/questions/<%= question._id %>/answers"
              method="POST"
              class="space-y-3 sm:space-y-4"
            >
              <div>
                <textarea
                  name="text"
                  id="text"
                  rows="5"
                  class="block w-full px-3 py-2 sm:px-4 sm:py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#0466C8] focus:border-[#0466C8] shadow-sm outline-none text-sm sm:text-base"
                  placeholder="Share your solution or suggest an approach..."
                  required
                ></textarea>
              </div>
              <div class="pt-1 sm:pt-2">
                <button
                  type="submit"
                  class="inline-flex items-center px-4 py-2 sm:px-6 sm:py-2.5 border border-transparent rounded-lg shadow-sm text-sm sm:text-base font-medium bg-white text-[#0466C8] hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#0466C8] transition w-full sm:w-auto"
                >
                  <i class="fas fa-paper-plane mr-2"></i>
                  Post Answer
                </button>
              </div>
            </form>
            <% } else { %>
            <div class="bg-blue-50 border-l-4 border-[#0466C8] p-3 sm:p-4 rounded">
              <div class="flex">
                <div class="flex-shrink-0">
                  <i class="fas fa-info-circle text-[#0466C8]"></i>
                </div>
                <div class="ml-3">
                  <p class="text-xs sm:text-sm text-gray-700">
                    You need to be logged in to answer this question.
                    <a
                      href="/login"
                      class="text-[#0466C8] hover:text-[#0353A4] font-medium"
                      >Login</a
                    >
                    or
                    <a
                      href="/register"
                      class="text-[#0466C8] hover:text-[#0353A4] font-medium"
                      >Register</a
                    >
                    to continue.
                  </p>
                </div>
              </div>
            </div>
            <% } %>
          </div>
        </div>
      </div>
    </main>

    <footer class="bg-[#023E7D] py-6 text-white mt-auto">
      <div class="container mx-auto px-6">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <div class="mb-4 md:mb-0 flex items-center">
            <i class="fas fa-code text-xl mr-2"></i>
            <span class="font-mono font-bold text-lg">CodeExchange</span>
          </div>
          <div class="mb-4 md:mb-0 text-sm text-gray-200">
            &copy; 2024 CodeExchange. All rights reserved. Created by Saksham
          </div>
        </div>
      </div>
    </footer>

    <style>
      .nav-link {
        @apply px-3 py-2 rounded-md hover:bg-white hover:bg-opacity-10 transition;
      }
      .nav-link.active {
        @apply bg-white bg-opacity-10;
      }
      .mobile-nav-link {
        @apply px-3 py-2.5 rounded-md hover:bg-white hover:bg-opacity-10 transition flex items-center;
      }
      .mobile-nav-link.active {
        @apply bg-white bg-opacity-10;
      }
    </style>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const mobileMenuButton = document.getElementById("mobileMenuButton");
        const mobileMenu = document.getElementById("mobileMenu");
        const hamburgerIcon = document.getElementById("hamburgerIcon");

        mobileMenuButton.addEventListener("click", function () {
          mobileMenu.classList.toggle("hidden");

          if (hamburgerIcon.classList.contains("fa-bars")) {
            hamburgerIcon.classList.remove("fa-bars");
            hamburgerIcon.classList.add("fa-times");
          } else {
            hamburgerIcon.classList.remove("fa-times");
            hamburgerIcon.classList.add("fa-bars");
          }
        });
      });

      async function deleteAnswer(questionId, answerId) {
        if (confirm("Are you sure you want to delete this answer?")) {
          try {
            const response = await fetch(
              `/questions/${questionId}/answers/${answerId}`,
              {
                method: "DELETE",
                headers: {
                  "Content-Type": "application/json",
                },
              }
            );
            const data = await response.json();
            if (response.ok) {
              window.location.reload();
            } else {
              alert(data.message || "Error deleting answer");
            }
          } catch (error) {
            console.error("Error:", error);
            alert("Error deleting answer");
          }
        }
      }

      function toggleQuestionEdit(showEdit) {
        const contentDiv = document.getElementById('questionContent');
        const editFormDiv = document.getElementById('questionEditForm');
        const editBtn = document.getElementById('editQuestionBtn');
        
        if (showEdit) {
          contentDiv.classList.add('hidden');
          editFormDiv.classList.remove('hidden');
          editBtn.classList.add('hidden');
        } else {
          contentDiv.classList.remove('hidden');
          editFormDiv.classList.add('hidden');
          editBtn.classList.remove('hidden');
        }
      }
      
      function toggleAnswerEdit(answerId, showEdit) {
        const answerDiv = document.getElementById(`answer-${answerId}`);
        const contentDiv = answerDiv.querySelector('.answer-content');
        const editFormDiv = answerDiv.querySelector('.answer-edit-form');
        
        if (showEdit) {
          contentDiv.classList.add('hidden');
          editFormDiv.classList.remove('hidden');
        } else {
          contentDiv.classList.remove('hidden');
          editFormDiv.classList.add('hidden');
        }
      }
      
      document.addEventListener('DOMContentLoaded', function() {
        const editQuestionForm = document.getElementById('editQuestionForm');
        if (editQuestionForm) {
          editQuestionForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const questionId = '<%= question._id %>';
            const updatedDescription = document.getElementById('editQuestionText').value;
            
            try {
              const response = await fetch(`/questions/${questionId}`, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ description: updatedDescription }),
              });
              
              const data = await response.json();
              if (response.ok) {
                window.location.reload();
              } else {
                alert(data.message || 'Error updating question');
              }
            } catch (error) {
              console.error('Error:', error);
              alert('Error updating question');
            }
          });
        }
        
        const editAnswerForms = document.querySelectorAll('.edit-answer-form');
        editAnswerForms.forEach(form => {
          form.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const answerId = this.getAttribute('data-answer-id');
            const questionId = '<%= question._id %>';
            const updatedText = this.querySelector('.edit-answer-text').value;
            
            try {
              const response = await fetch(`/questions/${questionId}/answers/${answerId}`, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ text: updatedText }),
              });
              
              const data = await response.json();
              if (response.ok) {
                window.location.reload();
              } else {
                alert(data.message || 'Error updating answer');
              }
            } catch (error) {
              console.error('Error:', error);
              alert('Error updating answer');
            }
          });
        });
      });
    </script>
    <script src="/theme.js"></script>
  </body>
</html>
